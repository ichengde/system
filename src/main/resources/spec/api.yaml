---
openapi: 3.0.0
info:
  title: System
  description: |
    private use.
  contact:
    email: chegde@foxmail.com
  version: 0.0.1
servers:
- url: https://virtserver.swaggerhub.com/ichengde/system/0.0.1
  description: SwaggerHub API Auto Mocking
- url: http://localhost:18889
  description: SwaggerHub API Auto Mocking
tags:
- name: user
  description: Operations about user
- name: note
  description: Operations about note
paths:
  /user/login:
    post:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "400":
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  /note/:
    put:
      tags:
      - note
      operationId: createNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNoteRequest'
      responses:
        default:
          description: successful operation
    post:
      tags:
      - note
      operationId: updateNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNoteRequest'
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid username/password supplied
  /note/{id}:
    get:
      tags:
      - note
      operationId: getNote
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noteResponse'
  /note/list:
    get:
      tags:
      - note
      operationId: getNoteList
      parameters:
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noteListResponse'
components:
  schemas:
    App:
      type: string
      enum:
      - note
      - logistics
      - wood
    noteType:
      type: number
      enum:
      - 0
      - 1
      - 2
    createNoteRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        user_id:
          type: string
        type:
          $ref: '#/components/schemas/noteType'
    updateNoteRequest:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        user_id:
          type: string
        type:
          $ref: '#/components/schemas/noteType'
    noteResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        user_id:
          type: string
        type:
          $ref: '#/components/schemas/noteType'
    noteListResponse:
      type: array
      items:
        $ref: '#/components/schemas/noteResponse'
    UserResponse:
      type: object
      properties:
        app:
          type: array
          items:
            $ref: '#/components/schemas/App'
        token:
          type: string
          default: string
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      xml:
        name: User
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  parameters:
    offsetParam:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set.
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      required: true
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
